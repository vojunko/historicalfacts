document.addEventListener("DOMContentLoaded", () => {
  const calendarEl = document.getElementById("calendar");
  const popup = document.getElementById("event-popup");
  const popupDate = document.getElementById("popup-date");
  const popupText = document.getElementById("event-text");
  const closeBtn = document.getElementById("close-btn");

  if (closeBtn) {
    closeBtn.addEventListener("click", () => {
      popup.classList.add("hidden");
    });
  } else {
    console.warn("Element #close-btn nebyl nalezen.");
  }

  function createCalendar() {
    calendarEl.innerHTML = "";

    const today = new Date();
    const year = today.getFullYear();
    const month = today.getMonth();
    const day = today.getDate();

    const daysInMonth = new Date(year, month + 1, 0).getDate();

    // Zobraz√≠me 7 dn√≠: 3 p≈ôed dne≈°kem, dne≈°ek, 3 po dne≈°ku
    for (let i = -3; i <= 3; i++) {
      let currentDay = day + i;
      let active = (i === 0);

      // O≈°et≈ôen√≠ p≈ôeteƒçen√≠ do p≈ôedchoz√≠ho nebo n√°sleduj√≠c√≠ho mƒõs√≠ce
      let displayDay = currentDay;
      let displayMonth = month + 1;
      let displayYear = year;

      if (currentDay < 1) {
        // P≈ôejdeme na p≈ôedchoz√≠ mƒõs√≠c
        const prevMonthDate = new Date(year, month, 0); // posledn√≠ den p≈ôedchoz√≠ho mƒõs√≠ce
        displayDay = prevMonthDate.getDate() + currentDay; // currentDay je z√°porn√©
        displayMonth = month; // mƒõs√≠c je p≈ôedchoz√≠ (0-index)
        if (month === 0) displayYear = year - 1;
      } else if (currentDay > daysInMonth) {
        // P≈ôejdeme na dal≈°√≠ mƒõs√≠c
        displayDay = currentDay - daysInMonth;
        displayMonth = month + 2; // mƒõs√≠c n√°sleduj√≠c√≠
        if (month === 11) displayYear = year + 1;
      }

      const cell = document.createElement("div");
      cell.className = "day";
      cell.innerText = displayDay;

      // V√Ωpoƒçet vzd√°lenosti od st≈ôedu pro opacity a scale
      const distanceFromCenter = Math.abs(i);
      const opacity = 1 - distanceFromCenter * 0.2; // 1, 0.8, 0.6, 0.4
      const scale = 1 - distanceFromCenter * 0.1; // 1, 0.9, 0.8, 0.7

      cell.style.opacity = opacity;
      cell.style.transform = `scale(${scale})`;

      if (active) {
        cell.addEventListener("click", () => showEvent(displayDay, displayMonth));
      } else {
        cell.classList.add("inactive-day");
      }

      calendarEl.appendChild(cell);
    }
  }

  async function showEvent(day, month) {
    const mm = String(month).padStart(2, "0");
    const dd = String(day).padStart(2, "0");
    const url = `https://en.wikipedia.org/api/rest_v1/feed/onthisday/events/${mm}/${dd}`;

    popup.classList.remove("hidden");
    popupDate.innerText = `${day}.${month}.`;
    popupText.innerText = "Naƒç√≠t√°m ud√°lost...";

    try {
      const response = await fetch(url);
      if (!response.ok) throw new Error("Chyba v s√≠ti");

      const data = await response.json();
      const events = data.events;

      if (events && events.length > 0) {
        const randomEvent = events[Math.floor(Math.random() * events.length)];
        popupText.innerText = `${randomEvent.year}: ${randomEvent.text}`;
      } else {
        popupText.innerText = "≈Ω√°dn√© ud√°losti nenalezeny.";
      }
    } catch (error) {
      console.error("Chyba p≈ôi z√≠sk√°v√°n√≠ dat:", error);
      popupText.innerText = "Nepoda≈ôilo se naƒç√≠st ud√°lost.";
    }
  }

  createCalendar();

  // -- T√©ma (tmav√Ω/svƒõtl√Ω re≈æim) --
  const themeBtn = document.getElementById("toggle-theme");

  const savedTheme = localStorage.getItem("theme");
  if (savedTheme === "dark") {
    document.body.classList.add("dark-mode");
    themeBtn.textContent = "‚òÄÔ∏è";
    themeBtn.classList.remove("light-btn"); // tmav√Ω re≈æim = tlaƒç√≠tko svƒõtl√©
  } else {
    themeBtn.classList.add("light-btn"); // svƒõtl√Ω re≈æim = tlaƒç√≠tko tmav√©
  }

  themeBtn.addEventListener("click", () => {
    const dark = document.body.classList.toggle("dark-mode");

    themeBtn.textContent = dark ? "‚òÄÔ∏è" : "üåô";

    if (dark) {
      themeBtn.classList.remove("light-btn");
    } else {
      themeBtn.classList.add("light-btn");
    }

    localStorage.setItem("theme", dark ? "dark" : "light");
  });
});
